My voyage of discovery with Phusion Passenger, Enterprise Ruby, Git and
Capistrano.

These notes started as a literal record of the steps I was taking, but have
evolved into the steps I'd have to take to get the current capsample project.

Installed Phusion Passenger and Enterprise Ruby on Debian Lenny vmware instance
called lenny.vmware (also called lenny) and activated this virtual host in
apache:

<VirtualHost *:80>
  ServerName lenny.vmware
  DocumentRoot /var/www/apps/capsample/current/public
  RailsEnv production
</VirtualHost>
<VirtualHost *:80>
  ServerName beta.lenny.vmware
  DocumentRoot /var/www/apps/capsample-beta/current/public
  RailsEnv development
</VirtualHost>

Created capsample and capsample-beta directories in /var/www/apps on lenny
and made sheldonh its owner.

Copied my SSH public key over to lenny.

Created the rails app.

cat >.gitignore <<EOF
db/*.sqlite3
doc/api
doc/app
.DS_Store
log/*.log
tmp/**/*
EOF
rake db:schema:dump
script/generate scaffold sample
cp public/stylesheets/scaffold.css .
script/destroy scaffold sample
mv scaffold.css public/stylesheets

The schema dump creates a placeholder schema.rb in the db directory, and the
db directory itself, making sqlite3 easier to deal.  Together with slapping
in a copy of the scaffold stylesheet, we work around having to create
directories explicitly in after_setup and before_finalize_update (empty dirs
aren't tracked by git).

Created the repository at github.

Followed the getting started instructions for the repository at github.
This gets to the point where you have master and origin, and origin refers
to the repository at github.  So now github has the rails app.

Capify.  Committed to master without modification (but not pushed to origin),
in case I want to revert local mods.

Localized config/deploy.rb.

cap deploy:setup

Looked okay except for "zlib(finalizer): the stream was freed prematurely."
at the end, which I ignored.

cap deploy:check

Complained that git was missing so I installed git-core on lenny.

Created a do-nothing script/spin.

cap deploy:update

The find command failed because stylesheets releases/XXX/public/stylesheets
was missing.  This directory (and possibly others) is empty in a virgin
rails app, and so is not tracked by git.

Anyway, added before_finalize_update task to config/deploy.rb to create
missing public/stylesheets directory.

Couldn't remember whether I'd reloaded apache after updating the DocumentRoot
for the passenger vhost, so I reloaded apache, and then browsed to the site,
getting the "Welcome aboard" page.

Note that the rails "Welcome aboard" page's "About your application's
environment" link only works with RAILS_ENV=development, which I hadn't yet
gotten working at this point.

Committed capistrano localizations to master and pushed to origin.

Modified config/deploy.rb to share sqlite3 databases across releases.

cap deploy:migrate

Failed because rake wasn't in the PATH.
Symlinked /opt/ruby-enterprise-.../bin/rake into /usr/local/bin on lenny,
then the migrate worked.

cap deploy

Failed to run script/process/reaper, because ruby wasn't in the PATH.
Symlinked /opt/ruby-enterprise-.../bin/ruby into /usr/local/bin on lenny,

Came up with a better fix for reaper.  If app_server is set to :passenger,
override the deploy:restart task to request a passenger restart properly.
But I left the ruby symlink in place, for the sake of "cap invoke".

Also added no-op start and stop targets for passenger.

Added multistage support to deploy.rb, to associate git branches with
multiple deployments (e.g. production and beta).  Then did

	git checkout -b edge
	git remote add origin/edge git@github.com:sheldonh/capsample.git
	git push origin/edge edge
	cap -S deployment=beta deploy:setup

And voila!  Now I can deploy edge to the beta site with

	cap -S deployment=beta deploy

and master to the production site with

	cap -S deployment=production deploy

